{"version":3,"sources":["../../src/helpers/findByAPI.ts"],"names":["findByAPI","instance","findByTestId","findByText","findByPlaceholderText","findByDisplayValue","findAllByTestId","findAllByText","findAllByPlaceholderText","findAllByDisplayValue","findByPlaceholder","findAllByPlaceholder"],"mappings":";;;;;;;AAIA;;AACA;;AACA;;AAIA;;AACA;;AA+CO,MAAMA,SAAS,GAAIC,QAAD,KAA6C;AACpEC,EAAAA,YAAY,EAAE,4BAAaD,QAAb,CADsD;AAEpEE,EAAAA,UAAU,EAAE,wBAAWF,QAAX,CAFwD;AAGpEG,EAAAA,qBAAqB,EAAE,8CAAsBH,QAAtB,CAH6C;AAIpEI,EAAAA,kBAAkB,EAAE,wCAAmBJ,QAAnB,CAJgD;AAKpEK,EAAAA,eAAe,EAAE,+BAAgBL,QAAhB,CALmD;AAMpEM,EAAAA,aAAa,EAAE,2BAAcN,QAAd,CANqD;AAOpEO,EAAAA,wBAAwB,EAAE,iDAAyBP,QAAzB,CAP0C;AAQpEQ,EAAAA,qBAAqB,EAAE,2CAAsBR,QAAtB,CAR6C;AAUpE;AACAS,EAAAA,iBAAiB,EAAE,MACjB,uCAA0B,mBAA1B,EAA+C,uBAA/C,CAZkE;AAapEC,EAAAA,oBAAoB,EAAE,MACpB,uCACE,sBADF,EAEE,0BAFF;AAdkE,CAA7C,CAAlB","sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\nimport type { WaitForOptions } from '../waitFor';\nimport type { TextMatch } from '../matches';\nimport type { TextMatchOptions } from './byText';\nimport { findAllByTestId, findByTestId } from './byTestId';\nimport { findAllByText, findByText } from './byText';\nimport {\n  findAllByPlaceholderText,\n  findByPlaceholderText,\n} from './byPlaceholderText';\nimport { findAllByDisplayValue, findByDisplayValue } from './byDisplayValue';\nimport { throwRenamedFunctionError } from './errors';\n\nexport type FindByAPI = {\n  findAllByDisplayValue: (\n    value: TextMatch,\n    queryOptions?: TextMatchOptions & WaitForOptions,\n    waitForOptions?: WaitForOptions\n  ) => Promise<Array<ReactTestInstance>>;\n  findAllByPlaceholder: () => void;\n  findAllByPlaceholderText: (\n    placeholder: TextMatch,\n    queryOptions?: TextMatchOptions & WaitForOptions,\n    waitForOptions?: WaitForOptions\n  ) => Promise<Array<ReactTestInstance>>;\n  findAllByTestId: (\n    testId: TextMatch,\n    queryOptions?: TextMatchOptions & WaitForOptions,\n    waitForOptions?: WaitForOptions\n  ) => Promise<Array<ReactTestInstance>>;\n  findAllByText: (\n    text: TextMatch,\n    queryOptions?: TextMatchOptions & WaitForOptions,\n    waitForOptions?: WaitForOptions\n  ) => Promise<Array<ReactTestInstance>>;\n  findByDisplayValue: (\n    value: TextMatch,\n    queryOptions?: TextMatchOptions & WaitForOptions,\n    waitForOptions?: WaitForOptions\n  ) => Promise<ReactTestInstance>;\n  findByPlaceholder: () => void;\n  findByPlaceholderText: (\n    placeholder: TextMatch,\n    queryOptions?: TextMatchOptions & WaitForOptions,\n    waitForOptions?: WaitForOptions\n  ) => Promise<ReactTestInstance>;\n  findByTestId: (\n    testId: TextMatch,\n    queryOptions?: TextMatchOptions & WaitForOptions,\n    waitForOptions?: WaitForOptions\n  ) => Promise<ReactTestInstance>;\n  findByText: (\n    text: TextMatch,\n    queryOptions?: TextMatchOptions & WaitForOptions,\n    waitForOptions?: WaitForOptions\n  ) => Promise<ReactTestInstance>;\n};\n\nexport const findByAPI = (instance: ReactTestInstance): FindByAPI => ({\n  findByTestId: findByTestId(instance),\n  findByText: findByText(instance),\n  findByPlaceholderText: findByPlaceholderText(instance),\n  findByDisplayValue: findByDisplayValue(instance),\n  findAllByTestId: findAllByTestId(instance),\n  findAllByText: findAllByText(instance),\n  findAllByPlaceholderText: findAllByPlaceholderText(instance),\n  findAllByDisplayValue: findAllByDisplayValue(instance),\n\n  // Renamed\n  findByPlaceholder: () =>\n    throwRenamedFunctionError('findByPlaceholder', 'findByPlaceholderText'),\n  findAllByPlaceholder: () =>\n    throwRenamedFunctionError(\n      'findAllByPlaceholder',\n      'findAllByPlaceholderText'\n    ),\n});\n"],"file":"findByAPI.js"}