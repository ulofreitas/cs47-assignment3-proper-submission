import type { ReactTestInstance } from 'react-test-renderer';
import { TextMatch } from '../matches';
import type { TextMatchOptions } from './byText';
declare const queryAllByDisplayValue: (instance: ReactTestInstance) => (displayValue: TextMatch, queryOptions?: TextMatchOptions | undefined) => Array<ReactTestInstance>;
declare const getByDisplayValue: (instance: ReactTestInstance) => (args: TextMatch, queryOptions?: TextMatchOptions | undefined) => ReactTestInstance, getAllByDisplayValue: (instance: ReactTestInstance) => (args: TextMatch, queryOptions?: TextMatchOptions | undefined) => ReactTestInstance[], queryByDisplayValue: (instance: ReactTestInstance) => (args: TextMatch, queryOptions?: TextMatchOptions | undefined) => ReactTestInstance | null, findByDisplayValue: (instance: ReactTestInstance) => (args: TextMatch, queryOptions?: (TextMatchOptions & import("../waitFor").WaitForOptions) | undefined, waitForOptions?: import("../waitFor").WaitForOptions | undefined) => Promise<ReactTestInstance>, findAllByDisplayValue: (instance: ReactTestInstance) => (args: TextMatch, queryOptions?: (TextMatchOptions & import("../waitFor").WaitForOptions) | undefined, waitForOptions?: import("../waitFor").WaitForOptions | undefined) => Promise<ReactTestInstance[]>;
export { findAllByDisplayValue, findByDisplayValue, getAllByDisplayValue, getByDisplayValue, queryAllByDisplayValue, queryByDisplayValue, };
