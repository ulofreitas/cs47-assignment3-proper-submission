import type { ReactTestInstance } from 'react-test-renderer';
import { TextMatch } from '../matches';
import type { NormalizerFn } from '../matches';
export declare type TextMatchOptions = {
    exact?: boolean;
    normalizer?: NormalizerFn;
};
declare const queryAllByText: (instance: ReactTestInstance) => (text: TextMatch, queryOptions?: TextMatchOptions | undefined) => Array<ReactTestInstance>;
declare const getByText: (instance: ReactTestInstance) => (args: TextMatch, queryOptions?: TextMatchOptions | undefined) => ReactTestInstance, getAllByText: (instance: ReactTestInstance) => (args: TextMatch, queryOptions?: TextMatchOptions | undefined) => ReactTestInstance[], queryByText: (instance: ReactTestInstance) => (args: TextMatch, queryOptions?: TextMatchOptions | undefined) => ReactTestInstance | null, findByText: (instance: ReactTestInstance) => (args: TextMatch, queryOptions?: (TextMatchOptions & import("../waitFor").WaitForOptions) | undefined, waitForOptions?: import("../waitFor").WaitForOptions | undefined) => Promise<ReactTestInstance>, findAllByText: (instance: ReactTestInstance) => (args: TextMatch, queryOptions?: (TextMatchOptions & import("../waitFor").WaitForOptions) | undefined, waitForOptions?: import("../waitFor").WaitForOptions | undefined) => Promise<ReactTestInstance[]>;
export { findAllByText, findByText, getAllByText, getByText, queryAllByText, queryByText, };
