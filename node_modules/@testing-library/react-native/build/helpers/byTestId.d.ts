import type { ReactTestInstance } from 'react-test-renderer';
import { TextMatch } from '../matches';
import type { TextMatchOptions } from './byText';
declare const queryAllByTestId: (instance: ReactTestInstance) => (testId: TextMatch, queryOptions?: TextMatchOptions | undefined) => Array<ReactTestInstance>;
declare const getByTestId: (instance: ReactTestInstance) => (args: TextMatch, queryOptions?: TextMatchOptions | undefined) => ReactTestInstance, getAllByTestId: (instance: ReactTestInstance) => (args: TextMatch, queryOptions?: TextMatchOptions | undefined) => ReactTestInstance[], queryByTestId: (instance: ReactTestInstance) => (args: TextMatch, queryOptions?: TextMatchOptions | undefined) => ReactTestInstance | null, findByTestId: (instance: ReactTestInstance) => (args: TextMatch, queryOptions?: (TextMatchOptions & import("../waitFor").WaitForOptions) | undefined, waitForOptions?: import("../waitFor").WaitForOptions | undefined) => Promise<ReactTestInstance>, findAllByTestId: (instance: ReactTestInstance) => (args: TextMatch, queryOptions?: (TextMatchOptions & import("../waitFor").WaitForOptions) | undefined, waitForOptions?: import("../waitFor").WaitForOptions | undefined) => Promise<ReactTestInstance[]>;
export { findAllByTestId, findByTestId, getAllByTestId, getByTestId, queryAllByTestId, queryByTestId, };
